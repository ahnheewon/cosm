<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.prj.cosm.produce.plan.mapper.PlanMapper">

	<!-- 전체조회 -->
	<select id="getPlanList" resultType="PlanVO">
		SELECT p.plan_no, p.plan_quantity, p.plan_start, p.plan_end,
		p.plan_ex, p.plan_product_no, p.plan_bom_no,
		p.plan_order_no, code_name as plan_play_code
		FROM produce_plan p JOIN code
		ON p.plan_play_code = code.code_no
		ORDER BY p.plan_no DESC
	</select>

	<!-- 자재입고 완료 된것만 보이게 -->
	<select id="completePlanList" resultType="PlanVO">
		SELECT p.plan_no, p.plan_quantity, p.plan_start,
		p.plan_end, p.plan_ex, p.plan_product_no, p.plan_bom_no,
		p.plan_order_no, code_name as plan_play_code
		FROM produce_plan p JOIN code
		ON p.plan_play_code = code.code_no
		WHERE plan_play_code = 'A0108'
		ORDER BY PLAN_NO DESC
	</select>

	<!-- 생산계획번호 +1 -->
	<select id="getPlanNo" resultType="PlanVO">
		SELECT
		'PLAN_'||TO_CHAR(SYSDATE,'rrrr')||LPAD(NVL(MAX(SUBSTR(plan_no,-4)),0)+1,4,0)
		as plan_no
		FROM produce_plan WHERE plan_no LIKE 'PLAN_'||TO_CHAR(SYSDATE,'rrrr')||'%'
	</select>

	<!-- 생산계획 단건조회 -->
	<select id="getPlanInfo" resultType="planVO">
		SELECT p.plan_no,
		p.plan_quantity,
		p.plan_start,
		p.plan_end,
		p.plan_ex,
		p.plan_product_no,
		p.plan_order_no, b.bom_quantity, b.bom_no,
		g.goods_name, g.goods_standard, g.goods_contents, g.goods_check, g.goods_date
		FROM produce_plan p

		JOIN produce_goods g
		ON p.plan_product_no = g.goods_no

		JOIN produce_bom b
		ON g.goods_no = b.bom_product_no

		WHERE p.plan_no = #{planNo}
	</select>

	<!-- 생산계획등록 -->
	<insert id="insertPlan" parameterType="PlanVO">

		INSERT INTO
		produce_plan (
		plan_no,
		plan_quantity,
		plan_start,
		plan_end,
		plan_ex,
		plan_product_no,
		plan_order_no
		)
		VALUES(
		#{planNo},
		#{planQuantity},
		#{planStart},
		#{planEnd},
		#{planEx},
		#{planProductNo},
		#{planOrderNo}
		)
	</insert>

	<!-- 생산계획 수정 -->
	<update id="updatePlan" parameterType="PlanVO">
		UPDATE produce_plan
		<set>
			<if test="planQuantity != null and !planQuantity.equals('')">
				plan_quantity = #{planQuantity}
			</if>
			<if test="planStart != null and !planStart.equals('')">
				,plan_start = #{planStart}
			</if>
			<if test="planEnd != null and !planEnd.equals('')">
				,plan_end = #{planEnd}
			</if>
			<if test="planEx != null and !planEx.equals('')">
				,plan_ex = #{planEx}
			</if>
			<if test="planBomNo != null and !planBomNo.equals('')">
				,plan_bom_no = #{planBomNo}
			</if>

		</set>
		WHERE plan_no = #{planNo}
	</update>

	<!-- 생산계획 삭제 -->
	<delete id="deletePlan">
		DELETE FROM produce_plan WHERE plan_no = #{planNo}
	</delete>

	<!-- 제품번호 리스트 -->
	<select id="getGoodsNoList" resultType="PlanVO">
		SELECT goods_no
		FROM
		produce_goods
		ORDER BY goods_no
	</select>

	<!-- BOM번호 리스트 -->
	<select id="getBomNoList" resultType="PlanVO">
		SELECT bom_no
		FROM
		produce_bom
		ORDER BY bom_no
	</select>

	<!-- 생산계획 생산지시시 리스트에서 빠지기 -->
	<update id="updatePlay" parameterType="PlanVO">
		UPDATE produce_plan
		SET
		plan_play_code = 'A0103'
		WHERE plan_no = #{planNo}
	</update>

	<!-- 주문서 전체조회 -->
	<select id="selectOrderList" resultType="PlanVO">
		SELECT o.order_no,
		o.goods_no, o.order_date, o.delivery_date, o.total_num,
		o.note,
		g.goods_name, code_name as order_code
		FROM produce_goods g
		JOIN orders o
		ON g.goods_no = o.goods_no
		JOIN code ON o.order_code = code.code_no
		WHERE o.order_code = 'B0107'
	</select>

	<!-- 생산계획시 주문서 업데이트 -->
	<update id="updateOrderInfo" parameterType="PlanVO">
		UPDATE orders
		SET
		order_code = 'B0108'
		WHERE order_no = #{orderNo}
	</update>



	<!-- 생산지시 시 재고1 업데이트 -->
	<update id="updateMaterialInfo" parameterType="PlanVO">
		UPDATE material
		SET m_stock = ( m_stock - (SELECT (plan.plan_quantity * bom.bom_quantity)/goods.goods_standard as required_material
							       FROM produce_plan plan
								   		JOIN produce_goods goods 
								   		ON plan.plan_product_no = goods.goods_no
								  		JOIN produce_bom bom 
								  		ON goods.goods_no = bom.bom_product_no
								   WHERE plan_no = #{planNo}))
		WHERE m_no = (SELECT bom.bom_material_no
					  FROM produce_plan plan
						   JOIN produce_goods goods
						   ON plan.plan_product_no = goods.goods_no
						   JOIN produce_bom bom
					       ON goods.goods_no = bom.bom_product_no
					  WHERE plan_no = #{planNo})
	</update>

	<!-- 생산지시시 재고2 업데이트 -->
	<update id="updateMaterialInfo2" parameterType="PlanVO">
		UPDATE material
		SET m_stock = ( m_stock - (SELECT (plan.plan_quantity *
		bom.bom_quantityb)/goods.goods_standard as required_material
		FROM produce_plan plan
		JOIN produce_goods goods
		ON plan.plan_product_no = goods.goods_no
		JOIN produce_bom bom
		ON goods.goods_no = bom.bom_product_no
		WHERE plan_no = #{planNo}))
		WHERE m_no = (SELECT bom.bom_material_nob
		FROM produce_plan plan
		JOIN produce_goods goods
		ON plan.plan_product_no = goods.goods_no
		JOIN produce_bom bom
		ON goods.goods_no = bom.bom_product_no
		WHERE plan_no = #{planNo})

	</update>

	<!-- 자재부족 알림위해 SELECT -->
	<select id="selectMaterialSum" resultType="PlanVO">
		SELECT bom_material_no as "bom1", 
			   SUM(plan_quantity*bom_quantity/goods_standard) as bom1_req_qntt,
			   m1.m_stock as "m1_stock",
			   CASE WHEN SUM(plan_quantity*bom_quantity/goods_standard) > m1.m_stock 
			   THEN 1 ELSE 0 END as yn1,
			   bom_material_nob as "bom2",
			   SUM(plan_quantity*bom_quantityb/goods_standard) as
			   bom2_req_qntt,
			   m2.m_stock as "m2_stock",
			   CASE WHEN SUM(plan_quantity*bom_quantityb/goods_standard) > m2.m_stock
			   THEN 1 ELSE 0 END as yn2
		FROM produce_bom b JOIN produce_goods g
						   ON b.bom_product_no = g.goods_no
						   JOIN produce_plan p
						   ON p.plan_product_no = g.goods_no
						   JOIN material m1
						   ON m1.m_no = b.bom_material_no
						   JOIN material m2
						   ON m2.m_no = b.bom_material_nob
		WHERE bom_product_no = 'PRO_20220001'
			  AND plan_play_code = 'A0109'
		GROUP BY bom_material_no, m1.m_stock, bom_material_nob, m2.m_stock
	</select>

	<select id="getPlanCompute" resultType="PlanVO">
		select
		plan_no,bom_material_no, plan_quantity*bom_quantity/goods_standard as
		bom_quantity,bom_material_nob,
		plan_quantity*bom_quantityb/goods_standard as bom_quantityb
		FROM
		produce_plan p
		JOIN produce_goods g
		ON p.plan_product_no = g.goods_no
		JOIN produce_bom b
		ON g.goods_no = b.bom_product_no
		where plan_play_code
		= 'A0109' OR plan_play_code = 'A0108' order by plan_play_code,plan_no
	</select>

	<update id="updateCanIns" parameterType="PlanVO">
		UPDATE produce_plan SET plan_play_code = 'A0108'
		WHERE plan_no IN
		<foreach collection="resultList" item="vo" close=")" open="("
			separator=",">
			#{vo.planNo}
		</foreach>
	</update>
</mapper>